version: '3'

services:

  sonar_db:
    image: postgres:10-alpine
    networks:
      - sonarnet
    environment:
      - POSTGRES_DB=sonardb
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_ENCODING=UTF8
      - POSTGRES_COLLATE=C
      - POSTGRES_COLLATE_TYPE=C
    command: ["-c", "shared_buffers=256MB", "-c", "max_connections=200"]
    volumes:
      - postgres_sonar_data:/var/lib/postgresql/data
    labels:
      - restic-compose-backup.postgres=true

  sonar:
    image: sonarqube:8-community
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://sonar_db:5432/sonardb
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    labels:
      - restic-compose-backup.volumes=true
    networks:
      - traefik-proxy
      - default
    depends_on:
      - sonar_db
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.http.routers.sonar.entrypoints=web
        - traefik.http.routers.sonar.rule=Host(`sonar.${SVC_DOMAIN?}`)
        - traefik.http.services.sonar.loadbalancer.server.port=9000
        - traefik.docker.network=traefik-proxy

networks:
  traefik-proxy:
    external: true

volumes:
  postgres_sonar_data:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
